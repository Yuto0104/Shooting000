//=============================================================================
//
// 背景クラス(bg.h)
// Author : 唐﨑結斗
// 概要 : 背景生成を行う
//
//=============================================================================
#ifndef _BG_H_		// このマクロ定義がされてなかったら
#define _BG_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "object.h"
#include "texture.h"

//=============================================================================
// 背景クラス
// Author : 唐﨑結斗
// 概要 : 背景生成を行うクラス
//=============================================================================
class CBG : public CObject
{
public:
	// 頂点フォーマット
	const unsigned int	FVF_VERTEX_2D = (D3DFVF_XYZRHW | D3DFVF_DIFFUSE | D3DFVF_TEX1);

	//*****************************************************************************
	// 構造体定義
	//*****************************************************************************
	// 頂点データ
	struct VERTEX_2D
	{
		D3DXVECTOR3		pos;		// 位置
		float			rhw;		// rhw
		D3DCOLOR		col;		// カラー
		D3DXVECTOR2		tex;		// テクスチャ座標
	};

	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static CBG *Create(void);				// 背景の生成

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CBG();
	~CBG() override;

	//--------------------------------------------------------------------
	// オーバーライド関数
	//--------------------------------------------------------------------
	HRESULT Init() override;			// 初期化
	void Uninit() override;				// 終了
	void Update() override;				// 更新
	void Draw() override;				// 描画

protected:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void SetVtx();															// 頂点座標などの設定
	void SetTex(const D3DXVECTOR2 &minTex, const D3DXVECTOR2 &maxTex);		// テクスチャ座標の設定
	void LoadTex(CTexture::TEXTURE_TYPE type) { m_typeTex = type; }			// テクスチャの設定

private:
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	LPDIRECT3DTEXTURE9			 m_pTexture;		// テクスチャ
	LPDIRECT3DVERTEXBUFFER9		 m_pVtxBuff;		// 頂点バッファ
	D3DCOLOR					 m_col;				// カラー
	CTexture::TEXTURE_TYPE		 m_typeTex;			// テクスチャの種別
};

#endif
